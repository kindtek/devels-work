#!/usr/bin/env
# adding compose_file and compose_path_seperator variables in .env file as below should make 
#
# `docker compose build` AND
# `docker compose build -f docker-compose.ubuntu.yaml -f docker-compose.alpine.yaml` 
#
# work exactly the same according to: 
#   https://pscheit.medium.com/docker-compose-advanced-configuration-541356d121de and
#   https://stackoverflow.com/questions/55650342/import-docker-compose-file-in-another-compose-file

# annoyingly, they do not :|

# # WINDOWS:
# COMPOSE_PATH_SEPARATOR=;
# COMPOSE_FILE=docker-compose.ubuntu.yaml;docker-compose.alpine.yaml;

# # UNIX/MAC
# COMPOSE_PATH_SEPARATOR=:
# COMPOSE_FILE=docker-compose.ubuntu.yaml:docker-compose.alpine.yaml:

# currently, only the last file is read..
COMPOSE_CONVERT_WINDOWS_PATHS=true
COMPOSE_PATH_SEPARATOR=:
# COMPOSE_FILE=docker-compose.alpine.yaml:docker-compose.ubuntu.yaml
# lets do just one for now
COMPOSE_FILE=docker-compose.alpine.yaml:docker-compose.ubuntu.yaml

# VOLUME_ID=mnt-data
COMPOSE_PROJECT_NAME=devels-play-ubuntu
